{"remainingRequest":"/Users/thossaporn/Desktop/game/admin-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/thossaporn/Desktop/game/admin-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thossaporn/Desktop/game/admin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thossaporn/Desktop/game/admin-web/src/components/pages/withdraw/withdraw.vue?vue&type=template&id=a8e3c1f8&","dependencies":[{"path":"/Users/thossaporn/Desktop/game/admin-web/src/components/pages/withdraw/withdraw.vue","mtime":1643344278646},{"path":"/Users/thossaporn/Desktop/game/admin-web/node_modules/cache-loader/dist/cjs.js","mtime":1661273170805},{"path":"/Users/thossaporn/Desktop/game/admin-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1661273161782},{"path":"/Users/thossaporn/Desktop/game/admin-web/node_modules/cache-loader/dist/cjs.js","mtime":1661273170805},{"path":"/Users/thossaporn/Desktop/game/admin-web/node_modules/vue-loader/lib/index.js","mtime":1661273161751}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}