{"remainingRequest":"/Users/thossaporn/Downloads/game/admin-web/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/thossaporn/Downloads/game/admin-web/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/thossaporn/Downloads/game/admin-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thossaporn/Downloads/game/admin-web/src/components/pages/User/addUser/addUser.vue?vue&type=template&id=7bc49b40&","dependencies":[{"path":"/Users/thossaporn/Downloads/game/admin-web/src/components/pages/User/addUser/addUser.vue","mtime":1654775228676},{"path":"/Users/thossaporn/Downloads/game/admin-web/node_modules/cache-loader/dist/cjs.js","mtime":1661273170805},{"path":"/Users/thossaporn/Downloads/game/admin-web/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1661273161782},{"path":"/Users/thossaporn/Downloads/game/admin-web/node_modules/cache-loader/dist/cjs.js","mtime":1661273170805},{"path":"/Users/thossaporn/Downloads/game/admin-web/node_modules/vue-loader/lib/index.js","mtime":1661273161751}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}