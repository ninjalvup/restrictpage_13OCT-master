{"remainingRequest":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MYPC\\Desktop\\member-web\\src\\components\\pages\\backend\\game\\casino\\casino.vue?vue&type=template&id=671f6500&scoped=true&","dependencies":[{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\src\\components\\pages\\backend\\game\\casino\\casino.vue","mtime":1657296115479},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656322783050},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1656322791840},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656322783050},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1656322788972}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}