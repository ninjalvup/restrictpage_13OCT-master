{"remainingRequest":"/Users/thossaporn/Downloads/game/member-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thossaporn/Downloads/game/member-web/src/services/testOTP.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thossaporn/Downloads/game/member-web/src/services/testOTP.vue","mtime":1660399991215},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/cache-loader/dist/cjs.js","mtime":1656322782000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/babel-loader/lib/index.js","mtime":1656322786000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/cache-loader/dist/cjs.js","mtime":1656322782000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/vue-loader/lib/index.js","mtime":1656322788000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KCmV4cG9ydCBkZWZhdWx0IHsKICAgIC8vIGNvbXBvbmVudHM6e3Rlc3RPVFB2ZXJpZnl9CiAgICBhc3luYyBmdW5jdGlvbiAoY29udGV4dCwgZXZlbnQsIGNhbGxiYWNrKSB7CiAgICBjb25zdCByZXNwb25zZSA9IG5ldyB0d2lsaW8uUmVzcG9uc2UoKTsKICAgIHJlc3BvbnNlLmFwcGVuZEhlYWRlcignQ29udGVudC1UeXBlJywgJ2FwcGxpY2F0aW9uL2pzb24nKTsKICAKICAgIC8qCiAgICAgKiB1bmNvbW1lbnQgdG8gc3VwcG9ydCBDT1JTCiAgICAgKiByZXNwb25zZS5hcHBlbmRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU9yaWdpbicsICcqJyk7CiAgICAgKiByZXNwb25zZS5hcHBlbmRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LU1ldGhvZHMnLCAnUE9TVCwgT1BUSU9OUycpOwogICAgICogcmVzcG9uc2UuYXBwZW5kSGVhZGVyKCdBY2Nlc3MtQ29udHJvbC1BbGxvdy1IZWFkZXJzJywgJ0NvbnRlbnQtVHlwZScpOwogICAgICovCiAgCiAgICB0cnkgewogICAgICBpZiAodHlwZW9mIGV2ZW50LnRvID09PSAndW5kZWZpbmVkJyB8fCBldmVudC50by50cmltKCkgPT09ICcnKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKAogICAgICAgICAgIk1pc3NpbmcgJ3RvJyBwYXJhbWV0ZXI7IHBsZWFzZSBwcm92aWRlIGEgcGhvbmUgbnVtYmVyIG9yIGVtYWlsLiIKICAgICAgICApOwogICAgICB9CiAgCiAgICAgIC8qCiAgICAgICAqIERFTEVURSBUSElTIEJMT0NLIElGIFlPVSBXQU5UIFRPIEVOQUJMRSBUSEUgVk9JQ0UgQ0hBTk5FTAogICAgICAgKiBMZWFybiBtb3JlIGFib3V0IHRvbGwgZnJhdWQKICAgICAgICogaHR0cHM6Ly93d3cudHdpbGlvLmNvbS9kb2NzL3ZlcmlmeS9wcmV2ZW50aW5nLXRvbGwtZnJhdWQKICAgICAgICovCiAgICAgIGlmIChldmVudC5jaGFubmVsID09PSAnY2FsbCcpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoCiAgICAgICAgICAnQ2FsbHMgZGlzYWJsZWQgYnkgZGVmYXVsdC4gVXBkYXRlIHRoZSBjb2RlIGluIDxjb2RlPnN0YXJ0LXZlcmlmeS5qczwvY29kZT4gdG8gZW5hYmxlLicKICAgICAgICApOwogICAgICB9CiAgCiAgICAgIGNvbnN0IGNsaWVudCA9IGNvbnRleHQuZ2V0VHdpbGlvQ2xpZW50KCk7CiAgICAgIC8vIGNvbnN0IHNlcnZpY2UgPSBjb250ZXh0LlZFUklGWV9TRVJWSUNFX1NJRDsKICAgICAgY29uc3Qgc2VydmljZSA9IlNLNmVhMTExNTc3YmVkMjBkNjM2NTNhOGU1MmY0ZTY2NTgiOwogICAgICBjb25zdCB7IHRvIH0gPSBldmVudDsKICAgICAgY29uc3QgY2hhbm5lbCA9CiAgICAgICAgdHlwZW9mIGV2ZW50LmNoYW5uZWwgPT09ICd1bmRlZmluZWQnID8gJ3NtcycgOiBldmVudC5jaGFubmVsOwogICAgICBjb25zdCBsb2NhbGUgPSB0eXBlb2YgZXZlbnQubG9jYWxlID09PSAndW5kZWZpbmVkJyA/ICdlbicgOiBldmVudC5sb2NhbGU7CiAgCiAgICAgIGNvbnN0IHZlcmlmaWNhdGlvbiA9IGF3YWl0IGNsaWVudC52ZXJpZnkKICAgICAgICAuc2VydmljZXMoc2VydmljZSkKICAgICAgICAudmVyaWZpY2F0aW9ucy5jcmVhdGUoewogICAgICAgICAgdG8sCiAgICAgICAgICBjaGFubmVsLAogICAgICAgICAgbG9jYWxlLAogICAgICAgIH0pOwogIAogICAgICBjb25zb2xlLmxvZyhgU2VudCB2ZXJpZmljYXRpb246ICcke3ZlcmlmaWNhdGlvbi5zaWR9J2ApOwogICAgICByZXNwb25zZS5zZXRTdGF0dXNDb2RlKDIwMCk7CiAgICAgIHJlc3BvbnNlLnNldEJvZHkoeyBzdWNjZXNzOiB0cnVlIH0pOwogICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgcmVzcG9uc2UpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc3Qgc3RhdHVzQ29kZSA9IGVycm9yLnN0YXR1cyB8fCA0MDA7CiAgICAgIHJlc3BvbnNlLnNldFN0YXR1c0NvZGUoc3RhdHVzQ29kZSk7CiAgICAgIHJlc3BvbnNlLnNldEJvZHkoewogICAgICAgIHN1Y2Nlc3M6IGZhbHNlLAogICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlLAogICAgICB9KTsKICAgICAgcmV0dXJuIGNhbGxiYWNrKG51bGwsIHJlc3BvbnNlKTsKICAgIH0KICB9LAoKfQo="},{"version":3,"sources":["testOTP.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"testOTP.vue","sourceRoot":"src/services","sourcesContent":["<template>\n    <!-- <h1> HERE</h1> -->\n    <button @click=\"show =!show\">get otp</button>\n    <!-- <div v-if=\"show\"><testOTPverify/></div> -->\n</template>\n\n<script>\nexport default {\n    // components:{testOTPverify}\n    async function (context, event, callback) {\n    const response = new twilio.Response();\n    response.appendHeader('Content-Type', 'application/json');\n  \n    /*\n     * uncomment to support CORS\n     * response.appendHeader('Access-Control-Allow-Origin', '*');\n     * response.appendHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');\n     * response.appendHeader('Access-Control-Allow-Headers', 'Content-Type');\n     */\n  \n    try {\n      if (typeof event.to === 'undefined' || event.to.trim() === '') {\n        throw new Error(\n          \"Missing 'to' parameter; please provide a phone number or email.\"\n        );\n      }\n  \n      /*\n       * DELETE THIS BLOCK IF YOU WANT TO ENABLE THE VOICE CHANNEL\n       * Learn more about toll fraud\n       * https://www.twilio.com/docs/verify/preventing-toll-fraud\n       */\n      if (event.channel === 'call') {\n        throw new Error(\n          'Calls disabled by default. Update the code in <code>start-verify.js</code> to enable.'\n        );\n      }\n  \n      const client = context.getTwilioClient();\n      // const service = context.VERIFY_SERVICE_SID;\n      const service =\"SK6ea111577bed20d63653a8e52f4e6658\";\n      const { to } = event;\n      const channel =\n        typeof event.channel === 'undefined' ? 'sms' : event.channel;\n      const locale = typeof event.locale === 'undefined' ? 'en' : event.locale;\n  \n      const verification = await client.verify\n        .services(service)\n        .verifications.create({\n          to,\n          channel,\n          locale,\n        });\n  \n      console.log(`Sent verification: '${verification.sid}'`);\n      response.setStatusCode(200);\n      response.setBody({ success: true });\n      return callback(null, response);\n    } catch (error) {\n      const statusCode = error.status || 400;\n      response.setStatusCode(statusCode);\n      response.setBody({\n        success: false,\n        error: error.message,\n      });\n      return callback(null, response);\n    }\n  },\n\n}\n</script>"]}]}