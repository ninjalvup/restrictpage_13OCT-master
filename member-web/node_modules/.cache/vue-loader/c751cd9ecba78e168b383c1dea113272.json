{"remainingRequest":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\MYPC\\Desktop\\member-web\\src\\components\\pages\\backend\\game\\baccarat\\baccarat.vue?vue&type=template&id=fe378d70&scoped=true&","dependencies":[{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\src\\components\\pages\\backend\\game\\baccarat\\baccarat.vue","mtime":1657031682292},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656322783050},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1656322791840},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1656322783050},{"path":"C:\\Users\\MYPC\\Desktop\\member-web\\node_modules\\vue-loader\\lib\\index.js","mtime":1656322788972}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}