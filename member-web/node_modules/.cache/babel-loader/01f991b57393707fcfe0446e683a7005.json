{"remainingRequest":"/Users/thossaporn/Downloads/game/member-web/node_modules/babel-loader/lib/index.js!/Users/thossaporn/Downloads/game/member-web/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/thossaporn/Downloads/game/member-web/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/thossaporn/Downloads/game/member-web/src/services/testOTP.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/thossaporn/Downloads/game/member-web/src/services/testOTP.vue","mtime":1660399991215},{"path":"/Users/thossaporn/Downloads/game/member-web/babel.config.js","mtime":1629947196000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/cache-loader/dist/cjs.js","mtime":1656322782000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/babel-loader/lib/index.js","mtime":1656322786000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/cache-loader/dist/cjs.js","mtime":1656322782000},{"path":"/Users/thossaporn/Downloads/game/member-web/node_modules/vue-loader/lib/index.js","mtime":1656322788000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZXJyb3IuY2F1c2UuanMiOwovLwovLwovLwovLwovLwovLwpleHBvcnQgZGVmYXVsdCB7CiAgLy8gY29tcG9uZW50czp7dGVzdE9UUHZlcmlmeX0KICBhc3luYyBmdW5jdGlvbihjb250ZXh0LCBldmVudCwgY2FsbGJhY2spIHsKICAgIGNvbnN0IHJlc3BvbnNlID0gbmV3IHR3aWxpby5SZXNwb25zZSgpOwogICAgcmVzcG9uc2UuYXBwZW5kSGVhZGVyKCdDb250ZW50LVR5cGUnLCAnYXBwbGljYXRpb24vanNvbicpOwogICAgLyoKICAgICAqIHVuY29tbWVudCB0byBzdXBwb3J0IENPUlMKICAgICAqIHJlc3BvbnNlLmFwcGVuZEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctT3JpZ2luJywgJyonKTsKICAgICAqIHJlc3BvbnNlLmFwcGVuZEhlYWRlcignQWNjZXNzLUNvbnRyb2wtQWxsb3ctTWV0aG9kcycsICdQT1NULCBPUFRJT05TJyk7CiAgICAgKiByZXNwb25zZS5hcHBlbmRIZWFkZXIoJ0FjY2Vzcy1Db250cm9sLUFsbG93LUhlYWRlcnMnLCAnQ29udGVudC1UeXBlJyk7CiAgICAgKi8KCiAgICB0cnkgewogICAgICBpZiAodHlwZW9mIGV2ZW50LnRvID09PSAndW5kZWZpbmVkJyB8fCBldmVudC50by50cmltKCkgPT09ICcnKSB7CiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCJNaXNzaW5nICd0bycgcGFyYW1ldGVyOyBwbGVhc2UgcHJvdmlkZSBhIHBob25lIG51bWJlciBvciBlbWFpbC4iKTsKICAgICAgfQogICAgICAvKgogICAgICAgKiBERUxFVEUgVEhJUyBCTE9DSyBJRiBZT1UgV0FOVCBUTyBFTkFCTEUgVEhFIFZPSUNFIENIQU5ORUwKICAgICAgICogTGVhcm4gbW9yZSBhYm91dCB0b2xsIGZyYXVkCiAgICAgICAqIGh0dHBzOi8vd3d3LnR3aWxpby5jb20vZG9jcy92ZXJpZnkvcHJldmVudGluZy10b2xsLWZyYXVkCiAgICAgICAqLwoKCiAgICAgIGlmIChldmVudC5jaGFubmVsID09PSAnY2FsbCcpIHsKICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0NhbGxzIGRpc2FibGVkIGJ5IGRlZmF1bHQuIFVwZGF0ZSB0aGUgY29kZSBpbiA8Y29kZT5zdGFydC12ZXJpZnkuanM8L2NvZGU+IHRvIGVuYWJsZS4nKTsKICAgICAgfQoKICAgICAgY29uc3QgY2xpZW50ID0gY29udGV4dC5nZXRUd2lsaW9DbGllbnQoKTsgLy8gY29uc3Qgc2VydmljZSA9IGNvbnRleHQuVkVSSUZZX1NFUlZJQ0VfU0lEOwoKICAgICAgY29uc3Qgc2VydmljZSA9ICJTSzZlYTExMTU3N2JlZDIwZDYzNjUzYThlNTJmNGU2NjU4IjsKICAgICAgY29uc3QgewogICAgICAgIHRvCiAgICAgIH0gPSBldmVudDsKICAgICAgY29uc3QgY2hhbm5lbCA9IHR5cGVvZiBldmVudC5jaGFubmVsID09PSAndW5kZWZpbmVkJyA/ICdzbXMnIDogZXZlbnQuY2hhbm5lbDsKICAgICAgY29uc3QgbG9jYWxlID0gdHlwZW9mIGV2ZW50LmxvY2FsZSA9PT0gJ3VuZGVmaW5lZCcgPyAnZW4nIDogZXZlbnQubG9jYWxlOwogICAgICBjb25zdCB2ZXJpZmljYXRpb24gPSBhd2FpdCBjbGllbnQudmVyaWZ5LnNlcnZpY2VzKHNlcnZpY2UpLnZlcmlmaWNhdGlvbnMuY3JlYXRlKHsKICAgICAgICB0bywKICAgICAgICBjaGFubmVsLAogICAgICAgIGxvY2FsZQogICAgICB9KTsKICAgICAgY29uc29sZS5sb2coYFNlbnQgdmVyaWZpY2F0aW9uOiAnJHt2ZXJpZmljYXRpb24uc2lkfSdgKTsKICAgICAgcmVzcG9uc2Uuc2V0U3RhdHVzQ29kZSgyMDApOwogICAgICByZXNwb25zZS5zZXRCb2R5KHsKICAgICAgICBzdWNjZXNzOiB0cnVlCiAgICAgIH0pOwogICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgcmVzcG9uc2UpOwogICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgY29uc3Qgc3RhdHVzQ29kZSA9IGVycm9yLnN0YXR1cyB8fCA0MDA7CiAgICAgIHJlc3BvbnNlLnNldFN0YXR1c0NvZGUoc3RhdHVzQ29kZSk7CiAgICAgIHJlc3BvbnNlLnNldEJvZHkoewogICAgICAgIHN1Y2Nlc3M6IGZhbHNlLAogICAgICAgIGVycm9yOiBlcnJvci5tZXNzYWdlCiAgICAgIH0pOwogICAgICByZXR1cm4gY2FsbGJhY2sobnVsbCwgcmVzcG9uc2UpOwogICAgfQogIH0KCn07"},{"version":3,"mappings":";;;;;;;AAOA;EACA;EACA;IACA;IACAA;IAEA;AACA;AACA;AACA;AACA;AACA;;IAEA;MACA;QACA,gBACA,iEADA;MAGA;MAEA;AACA;AACA;AACA;AACA;;;MACA;QACA,gBACA,uFADA;MAGA;;MAEA,yCAlBA,CAmBA;;MACA;MACA;QAAAC;MAAA;MACA,gBACA,4DADA;MAEA;MAEA,yCACAC,QADA,CACAC,OADA,EAEAC,aAFA,CAEAC,MAFA,CAEA;QACAJ,EADA;QAEAK,OAFA;QAGAC;MAHA,CAFA;MAQAC;MACAR;MACAA;QAAAS;MAAA;MACA;IACA,CAtCA,CAsCA;MACA;MACAT;MACAA;QACAS,cADA;QAEAC;MAFA;MAIA;IACA;EACA;;AA5DA","names":["response","to","services","service","verifications","create","channel","locale","console","success","error"],"sourceRoot":"src/services","sources":["testOTP.vue"],"sourcesContent":["<template>\n    <!-- <h1> HERE</h1> -->\n    <button @click=\"show =!show\">get otp</button>\n    <!-- <div v-if=\"show\"><testOTPverify/></div> -->\n</template>\n\n<script>\nexport default {\n    // components:{testOTPverify}\n    async function (context, event, callback) {\n    const response = new twilio.Response();\n    response.appendHeader('Content-Type', 'application/json');\n  \n    /*\n     * uncomment to support CORS\n     * response.appendHeader('Access-Control-Allow-Origin', '*');\n     * response.appendHeader('Access-Control-Allow-Methods', 'POST, OPTIONS');\n     * response.appendHeader('Access-Control-Allow-Headers', 'Content-Type');\n     */\n  \n    try {\n      if (typeof event.to === 'undefined' || event.to.trim() === '') {\n        throw new Error(\n          \"Missing 'to' parameter; please provide a phone number or email.\"\n        );\n      }\n  \n      /*\n       * DELETE THIS BLOCK IF YOU WANT TO ENABLE THE VOICE CHANNEL\n       * Learn more about toll fraud\n       * https://www.twilio.com/docs/verify/preventing-toll-fraud\n       */\n      if (event.channel === 'call') {\n        throw new Error(\n          'Calls disabled by default. Update the code in <code>start-verify.js</code> to enable.'\n        );\n      }\n  \n      const client = context.getTwilioClient();\n      // const service = context.VERIFY_SERVICE_SID;\n      const service =\"SK6ea111577bed20d63653a8e52f4e6658\";\n      const { to } = event;\n      const channel =\n        typeof event.channel === 'undefined' ? 'sms' : event.channel;\n      const locale = typeof event.locale === 'undefined' ? 'en' : event.locale;\n  \n      const verification = await client.verify\n        .services(service)\n        .verifications.create({\n          to,\n          channel,\n          locale,\n        });\n  \n      console.log(`Sent verification: '${verification.sid}'`);\n      response.setStatusCode(200);\n      response.setBody({ success: true });\n      return callback(null, response);\n    } catch (error) {\n      const statusCode = error.status || 400;\n      response.setStatusCode(statusCode);\n      response.setBody({\n        success: false,\n        error: error.message,\n      });\n      return callback(null, response);\n    }\n  },\n\n}\n</script>"]}]}